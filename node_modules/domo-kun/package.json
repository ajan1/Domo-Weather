{
  "name": "domo-kun",
  "version": "0.1.3",
  "engines": {
    "node": "0.9.3"
  },
  "dependencies": {
    "irc": "0.3.4",
    "underscore": "~1.4.4",
    "underscore.string": "~2.3.3",
    "routes": "~0.2.0",
    "colors": "~0.6.2"
  },
  "readmeFilename": "README.md",
  "description": "The most awesome thing ever",
  "devDependencies": {
    "james": "~0.1.15",
    "james-uglify": "~0.1.0",
    "james-coffee": "~0.1.1"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/rikukissa/domo.git"
  },
  "keywords": [
    "irc",
    "bot"
  ],
  "author": {
    "name": "Riku Rouvila"
  },
  "license": "BSD",
  "readme": "# Domo\n[NPM Package](https://npmjs.org/package/domo-kun)\n\n[Usage example in JavaScript](https://github.com/rikukissa/domo-example)\n\n* Best irc-bot ever\n* Easy to configure\n\n## Get Domo-kun\n\n```\nnpm install\n```\n```\nvar Domo, domo;\nDomo = require('domo-kun');\ndomo = new Domo(config);\ndomo.connect();\n```\n\n## Configuration\n````\nvar config = {\n  nick: 'Domo',\n  userName: 'Domo',\n  realName: 'Domo the awesome IRC-bot',\n  address: 'irc.quakenet.org',\n  channels: ['#riku'],\n  users: [{ // Array of users able to control your Domo instance\n      username: 'admin',\n      password: 'lolwut'\n    }],\n  modules: ['domo-eval'], // Modules to be loaded when Domo connects\n  debug: true\n};\n\n````\n## Creating routes\n\ndomo.route(path, callback);\n\nFor routing Domo uses [routes](https://github.com/aaronblohowiak/routes.js) library. Received IRC messages are matched to defined paths and the callback functions are called.\n\n````\ndomo.route('Hello Domo!', function(res) {\n  this.say(res.channel, 'Hi ' + res.nick + '!');\n});\n````\n## Middlewares\n\nYou can specify route specific middleware functions by adding them as arguments before the callback function.\n\n````\n// Only responds if the user who sends the message is authenticated\ndomo.route('Hello Domo!', domo.requiresUser, function(res) {\n  this.say(res.channel, 'Hi ' + res.nick + '!');\n});\n````\n\nCurrently the only built-in middleware is __domo.requiresUser__, that checks if the user who sends a message is authenticated.\nCreating custom middlewares is also possible.\n#### Example middleware\n````\n// Reverses received messages\nvar reverseMessages = function(res, next) {\n    res.message = res.message.split('').reverse().join('');\n    next();\n};\n````\nIt's now possible to use the new middleware like in the example above. It's also possible to use it automatically for all routes by registering it with __domo.use__ method.\n````\ndomo.use(reverseMessages);\n````\n\n## Creating custom modules\nDomo allows you to write your own modules that can be loaded on runtime without having to restart your Domo instance.\n\nModules can be loaded with the built-in __!load &lt;moduleName&gt;__  command.\n\nIf you are looking for an example module, take a look at [domo-eval](https://github.com/rikukissa/domo-eval).\n\nThe only requirement for the module is that it needs to return \"init\" method that is called when the module is loaded.\n\n## Built in IRC Commands\n* !domo\n  * Print Domo info\n\n\n* !auth &lt;username&gt; &lt;password&gt;\n  * Authenticate (Probably better to do this with private message)\n\n\n* !join &lt;channel&gt; &lt;password&gt;\n  * __Requires authentication__\n  * Tell Dōmo-kun to join channel\n\n\n* !part [channels..]\n  * __Requires authentication__\n  * Tell Dōmo-kun to leave channel\n\n\n* !load &lt;module&gt;\n  * __Requires authentication__\n  * Load domo module from node_modules directory\n\n\n* !stop &lt;module&gt;\n  * __Requires authentication__\n  * Stop module and detach it from message events\n\n![alt text](http://1.bp.blogspot.com/-VJRt-hZit4I/TbjjDINykBI/AAAAAAAABts/E3L3GFL5_hs/s800/09299bd81d5c92fc1e5461d8e04b2e64.gif \"Domo\")\n",
  "bugs": {
    "url": "https://github.com/rikukissa/domo/issues"
  },
  "_id": "domo-kun@0.1.3",
  "dist": {
    "shasum": "9ea6843a5bc52096e5400b711aea97f2e653f4ae"
  },
  "_from": "domo-kun@",
  "_resolved": "https://registry.npmjs.org/domo-kun/-/domo-kun-0.1.3.tgz"
}
